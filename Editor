import com.sun.j3d.utils.applet.MainFrame;
import com.sun.j3d.utils.universe.SimpleUniverse;
import java.applet.Applet;
import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Panel;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.media.j3d.AmbientLight;
import javax.media.j3d.BoundingSphere;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.media.j3d.DirectionalLight;
import javax.media.j3d.Transform3D;
import javax.vecmath.Color3f;
import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;
import javax.vecmath.Vector3f;

/* @author: Alya Carina /*
 * 
 */

public class Editor extends Applet {
    private TextArea size, dist, zModx, zMody, zShift, xMod, yMod, xShift, yShift;
    private SimpleUniverse plotHome;
    private Desert desert;
    private BranchGroup placeHolder, surface;
    public Editor() {
        setLayout(new BorderLayout());
        
        Canvas3D viewPort = new Canvas3D(SimpleUniverse.getPreferredConfiguration());
        plotHome = new SimpleUniverse(viewPort);
        Transform3D lookAt = new Transform3D();
        lookAt.lookAt( new  Point3d(0, -5, 1)//eye
                 , new  Point3d( 0.0, 0.0, 0.0 )//center
                 , new Vector3d( 0.0, 1.0, 0.0) );//up
        lookAt.invert();   
        plotHome.getViewingPlatform().getViewPlatformTransform().setTransform(lookAt);
        desert = new Desert();
        placeHolder = new BranchGroup();
        placeHolder.setCapability(BranchGroup.ALLOW_CHILDREN_EXTEND);
        placeHolder.setCapability(BranchGroup.ALLOW_CHILDREN_WRITE);
        surface = desert.getSurface();
        surface.setCapability(BranchGroup.ALLOW_DETACH);
        placeHolder.addChild(surface);
        placeHolder.addChild(addLighting());
        plotHome.addBranchGraph(placeHolder);
        add("Center", viewPort);
        
        ActionListener jerry = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                desert.setSize(Float.parseFloat(size.getText()));
                desert.setDistance(Float.parseFloat(dist.getText()));
                desert.setZxMod(Float.parseFloat(zModx.getText()));
                desert.setZyMod(Float.parseFloat(zMody.getText()));
                desert.setzShift(Float.parseFloat(zShift.getText()));
                desert.setxMod(Float.parseFloat(xMod.getText()));
                desert.setyMod(Float.parseFloat(yMod.getText()));
                desert.setxShift(Float.parseFloat(xShift.getText()));
                desert.setyShift(Float.parseFloat(yShift.getText()));
                surface.detach();
                desert.calculateSurface();
                surface = desert.getSurface();
                placeHolder.addChild(surface);
            }
        } ;
        
        Panel shape = new Panel();
        size = new TextArea("10",1,10, TextArea.SCROLLBARS_NONE);
        dist = new TextArea("1",1,10, TextArea.SCROLLBARS_NONE);
        zModx = new TextArea("0.3",1,10, TextArea.SCROLLBARS_NONE);
        zMody = new TextArea("0.2",1,10, TextArea.SCROLLBARS_NONE);
        zShift = new TextArea("0.1",1,10, TextArea.SCROLLBARS_NONE);
        xMod = new TextArea("0.1",1,10, TextArea.SCROLLBARS_NONE);
        yMod = new TextArea("0.1",1,10, TextArea.SCROLLBARS_NONE);
        xShift = new TextArea("-0.05",1,10, TextArea.SCROLLBARS_NONE);
        yShift = new TextArea("-0.05",1,10, TextArea.SCROLLBARS_NONE);
        shape.add(size);
        shape.add(dist);
        shape.add(zModx);
        shape.add(zMody);
        shape.add(zShift);
        shape.add(xMod);
        shape.add(yMod);
        shape.add(xShift);
        shape.add(yShift);
        Button b = new Button("OK");
        b.addActionListener(jerry);
        shape.add(b);        
        add("South", shape);
    }
    private BranchGroup addLighting(){
        BranchGroup lights = new BranchGroup();
        BoundingSphere bounds = new BoundingSphere(new Point3d(0.0, 0.0, 0.0), 100.0);
        Vector3f lv1 = new Vector3f(4.0f, -7.0f, -12.0f);
        DirectionalLight beam = new DirectionalLight(new Color3f(0.5f, 0.5f, 0.5f), lv1);
        AmbientLight mood = new AmbientLight(new Color3f(0.1f, 0.1f, 0.2f));
        beam.setInfluencingBounds(bounds);
        mood.setInfluencingBounds(bounds);
        lights.addChild(beam);
        lights.addChild(mood); 
        return lights;
    }
    public static void main(String[] args) {
        MainFrame mf = new MainFrame(new Editor(), 1000, 500);
        mf.setTitle("Desert Editor");
    }
} 
