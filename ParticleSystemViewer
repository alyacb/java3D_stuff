import com.sun.j3d.utils.applet.MainFrame;
import com.sun.j3d.utils.universe.SimpleUniverse;
import java.applet.Applet;
import java.awt.BorderLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.media.j3d.Transform3D;
import javax.swing.JCheckBox;
import javax.swing.Timer;
import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;

/**
 *
 * @author Alya Carina
 */
public class ParticleSystemViewer extends Applet {

    private GeneralParticles squareSystem;
    private PointParticles pointSystem;
    private BranchGroup particleNode, allFather;
    private JCheckBox pointParticles_check, squareParticles_check;
    private boolean squares, points;

    public ParticleSystemViewer() {
        setLayout(new BorderLayout());

        points = false;
        squares = false;

        Canvas3D viewPort = new Canvas3D(SimpleUniverse.getPreferredConfiguration());
        SimpleUniverse homeOf3D = new SimpleUniverse(viewPort);

        Point3d eye = new Point3d(1.0, -1.0, 2.0);
        Point3d center = new Point3d(0.0, 1.0, 0.0);
        Vector3d up = new Vector3d(0.0, 1.0, 0.0);
        Transform3D lookAt = new Transform3D();
        lookAt.lookAt(eye, center, up);
        lookAt.invert();
        homeOf3D.getViewingPlatform().getViewPlatformTransform().setTransform(lookAt);

        allFather = new BranchGroup();
        allFather.setCapability(BranchGroup.ALLOW_CHILDREN_WRITE);
        allFather.setCapability(BranchGroup.ALLOW_CHILDREN_EXTEND);
        
        particleNode = new BranchGroup();
        particleNode.setCapability(BranchGroup.ALLOW_DETACH);
        
        SampleSquare s = new SampleSquare();
        squareSystem = new GeneralParticles(100, s.getSquare());
        //particleNode.addChild(squareSystem.getBranchGraph());
        
        pointSystem = new PointParticles(100);
        //particleNode.addChild(pointSystem.getBranchGraph());
        
        allFather.addChild(particleNode);
        homeOf3D.addBranchGraph(allFather);

        Timer dimension4 = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                particleNode.detach();
                particleNode.removeAllChildren();
                if (squares) {
                    squareSystem.brownianMotion_OneStep();                                        
                    particleNode.addChild(squareSystem.getBranchGraph());
                } 
                if (points) {
                    pointSystem.brownianMotion_OneStep();                                        
                    particleNode.addChild(pointSystem.toShape());
                }
                allFather.addChild(particleNode);
            }
        });

        dimension4.start();

        add("Center", viewPort);

        Panel chooseParticles = new Panel();

        pointParticles_check = new JCheckBox("Point Particles");
        pointParticles_check.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                    points  = pointParticles_check.isSelected();
            }
        });

        squareParticles_check = new JCheckBox("Square Particles");
        squareParticles_check.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                    squares  = squareParticles_check.isSelected();
            }
        });

        chooseParticles.add(pointParticles_check);
        chooseParticles.add(squareParticles_check);

        add("South", chooseParticles);
    }

    public static void main(String[] args) {
        MainFrame mf = new MainFrame(new ParticleSystemViewer(), 500, 500);
        mf.setTitle("Particle System Viewer: Brownian Motion");
    }
}
